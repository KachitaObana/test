

------------------------------------------------------
▼GitHubを初めて触る僕が最初の「5時間」でやったこと
・目的：
　コーディングの力量を証明するため
　pythonの学習とその成果を公開

before
そもそもGitHubのアカウントを取って、そこに掲載するだけっしょ。
アカウント登録して、さっさとpythonの勉強はじめよっと。

after
え、リポジトリ？ブランチ？バージョン管理をガチでやる感じなんだ。
つーかwebじゃなくてローカルでコーディングしたのをUP（プッシュ）する仕組みがあるの？
Gitというシステムが前提にあるのね。Gitをローカルに入れとくか。

・GitHubとは
・GitとGitHubの違い
・アカウント作成
・GitHub Guides「Hello World」を体験
　https://guides.github.com/activities/hello-world/
・Git For Windowsのインストール(version 2.24.0)
　https://opcdiary.net/technical/programming/%E7%A7%81%E5%AE%B6%E7%89%88-git-for-windows%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%89%8B%E9%A0%86/
　┗Atom入れてない人は最初に入れとくべし
　┗MinTTYではなくWindowsDOSにしたよ
・Git For Windowsの設定
　https://proengineer.internous.co.jp/content/columnfeature/6918
・pushしてみる
　https://techacademy.jp/magazine/6235
　「git push reject」で検索して対処。

------------------------------------------------------
▼Pythonを初めて触るところからTodoアプリの作成まで

・筆者のレベル
　Pythonを触ったことがない。
　COBOL2年＞Java1年＞PHP3ヶ月＞Linux少々＞Webアプリ開発少々

・「progate」
　レッスン１のみでOK
　それ以降は課金されてしまう。

・pythonインストール＆「Helloworld」まで
https://prog-8.com/docs/python-env-win
※Atomはここで導入しました。めっちゃかっこいい。

まずは練習から
・まずはDBのこと
http://www.designmap.info/2016/12/11/python-19/

・サーバーも
http://www.designmap.info/2016/12/11/python-20/
僕の場合だと文字化けしてしまったので、以下の1行を削除して、とりあえず前に進みました。
<meta charset="UTF-8">

・入力フォームありバージョン
http://www.designmap.info/2016/12/12/python-21/
全文差し替えじゃなくて、ちゃんと太字を追記でやらないとダメです。

form = cgi.FieldStorage()
print(form)

「追加」ボタンを押すと、
FieldStorage(None, None, [MiniFieldStorage('name', 'コーヒー豆を買いにいく'), MiniFieldStorage('mode', 'add')])
がでない。

明確に定義しないと行けないことを痛感。
<meta charset="UTF-8">
だと、文字化けしますが、代わりに以下としました。
<meta charset="shift-jis">

多分、コマンドプロンプト上でLiteSQLにレコードを追加していった関係で、
shift-jisで文字列が入っているのかと。
なので、HTML全体もshift-jisに寄せました。


文字列を入れて「追加」を押すと今度は、画面真っ白に。
テーブルの中身を表示したら、今度はテーブルのほうが文字化け。
C:\Users\*****\Desktop\アプリ\python\todolist_lesson>python db1.py
1 ノートを買いにいく
2 切手を買いにいく
3 洋服を買いにいく
4 �R�[�q�[���𔃂�


以下で４番目のレコードを削除。
>>> import sqlite3
>>> conn = sqlite3.connect('todolist.db')
>>> curs = conn.cursor()
>>> curs.execute('select * from tasks')
<sqlite3.Cursor object at 0x0135AAA0>
>>> print(curs.fetchall())
[(1, 'ノートを買いにいく'), (2, '切手を買いにいく'), (3, '洋服を買いにいく'), (4, '�R�[�q�[���\U000140c2�')]
>>> curs.execute('select * from tasks where id = 4')
<sqlite3.Cursor object at 0x0135AAA0>
>>> print(curs.fetchall())
[(4, '�R�[�q�[���\U000140c2�')]
>>> curs.execute('delete from tasks where id = 4')
<sqlite3.Cursor object at 0x0135AAA0>
>>> curs.execute('select * from tasks')
<sqlite3.Cursor object at 0x0135AAA0>
>>> print(curs.fetchall())
[(1, 'ノートを買いにいく'), (2, '切手を買いにいく'), (3, '洋服を買いにいく')]
>>>conn.commit()
>>>

いったん画面復活。

画面から再度入力すると、画面真っ白に。
>>> curs.execute('select * from tasks')
<sqlite3.Cursor object at 0x0135AAA0>
>>> print(curs.fetchall())
[(1, 'ノートを買いにいく'), (2, '切手を買いにいく'), (3, '洋服を買いにいく'), (5, '�e�X�g')]
>>>

https://teratail.com/questions/130659
レコード全部削除。
これを追加したら治った。
# -- ↓デフォルトの出力(print)がsjisになっているのをutf-8にする↓ --
import sys
import io
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
# -- ↑デフォルトの出力(print)がsjisになっているのをutf-8にする↑ --

さらに以下に戻す。
<meta charset="UTF-8">


まとめると。

・コマンドプロンプト上でINSERT⇒sjis
・画面で入力「追加」⇒utf-8
・HTML生成(print)⇒sjis

・コマンドプロンプト上でINSERT⇒sjis　※テーブル全レコード削除
・画面で入力「追加」⇒utf-8
・HTML生成(print)⇒utf-8　※変更


http://www.designmap.info/2016/12/13/python-22/
簡単。


#!/usr/bin/env python3
import cgi
import html
import sqlite3

# -- ↓デフォルトの出力(print)がsjisになっているのをutf-8にする↓ --
import sys
import io
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
# -- ↑デフォルトの出力(print)がsjisになっているのをutf-8にする↑ --

conn = sqlite3.connect('todolist.db')
curs = conn.cursor()


print('Content-type: text/html')
print('')


def print_html(data=''):
    print('''\
    <!DOCTYPE html>
    <html>
    <head>
    <meta charset="utf-8">
    <title>Todoリスト</title>
    </head>
    <body>
    <form action="todo.py" method="post">
    タスク名<input type="text" name="name">
    <input type="hidden" name="mode" value="add">
    <input type="submit" value="追加">
    </form>
    <ul>
    {0}
    </ul>
    </body>
    </html>
    '''.format(data))

form = cgi.FieldStorage()
mode = form.getvalue('mode')

if mode == 'add':
    name = form.getvalue('name')
    name = html.escape(name)

    sql = ('INSERT INTO tasks(name) VALUES (?)')
    curs.execute(sql, (name,))
    conn.commit()

if mode == 'done':
    id = form.getvalue('id')
    id = html.escape(id)

    sql = ('DELETE FROM tasks WHERE id = ?')
    curs.execute(sql, (id,))
    conn.commit()

curs.execute('SELECT * FROM tasks')
rows = curs.fetchall()

data = ""

for id, name in rows:
    data +=  '''
    <li>{0}
    <form action="todo.py" method="post">
    <input type="submit" value="済んだ">
    <input type="hidden" name="id" value="{1}">
    <input type="hidden" name="mode" value="done">
    </form>
    </li>
    '''.format(name, id)

print_html(data)



------------------------------------------------------
▼Pythonでブラウザベースのアプリ開発の基本を学ぶ
データベース
描画

データベース参考サイト
https://techacademy.jp/magazine/19312

これからsqlite3使うよーな宣言
import sqlite3

DBとのコネクションを定義。conn.commitやconn.closeメソッドが使える。その名前のDBがなければ作る。
conn = sqlite3.connect('example.db')

テーブル操作オブジェクト。c.execute("SQL文")で該当DBにもろもろの操作ができる。
c = conn.cursor()

SQL実行
c.execute("SQL文")

コミット
conn.commit()

お行儀よくDBとはコネクションを切る
conn.close()

コマンドプロンプトからpython起動して入力していく場合は、まずはchcp 65001と打つこと。
テーブルの中身,HTML,ソースコードのすべてが統一されていないと、あらぬ障害が起きる。
僕の場合はUTF-8に統一しています。

確認用コマンド：chcp
⇒932:sjis
⇒65001:utf-8
https://qiita.com/user0/items/a9116acc7bd7b70ecfb0


https://techacademy.jp/magazine/21488


起動コマンド
python -m http.server --cgi 8080




------------------------------------------------------
▼外部設計
・タスクは縦に並べる（親子で最小日付のタスクの順に並ぶ）
▼親子タスク共通
・完了ボタン(下に完了日)、タスク、メモ、
・今日やるタスクは太字
・明日以降のタスク、右に「今日やる」「カレンダー」「削除」ボタン
・今日のタスク、右に「明日やる」「カレンダー」「削除」ボタン
・タスクの左は完了ボタン⇒押すと取り消し線⇒完了タスクの表示/非表示切替可能
▼親タスク
・タスクの右側に対応メモを記載（最大の大きさは定義し、スクロールさせる）
・親タスクの追加は一番上から「親タスク名、今日やる、日付」
・右上検索バー
・検索結果一覧「親タスク名、子タスク名、タスクメモ」でヒットすると、太字赤字。親タスク含めて一覧表示される。
▼小タスク
・展開済みとして表示される


------------------------------------------------------
▼Python

初心者向けに簡潔にまとめられており、特に「機械学習とデータ分析入門」というセクションには、Pythonのパッケージ(Numpy、Pandas、Matplotlib等)の基本的な使い方がコード付きで説明されています。Pythonによるデータ分析の教科書を買う前に試してみるのもありかと思います。
https://tutorials.chainer.org/ja/
------------------------------------------------------
